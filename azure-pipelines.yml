# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include: [ master, azure-pipelines ]

pool:
  vmImage: 'ubuntu-latest'

# Maven Build Variables:
variables:
  version: '6.7.0-SNAPSHOT'
  targetDir: 'target'
  codeSigningCertFileName: 'OneIdentityCodeSigning.pfx'

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'env | sort'
  displayName: 'Display environment variables'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m -D=$(version).$(Build.BuildId)'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/$(targetDir)'
    contents: '*.jar'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'Copy files to staging folder'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/$(targetDir)'
    contents: '**/lib/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'Copy files to staging folder'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'SafeguardJava'
  displayName: 'Publishing the artifacts'

